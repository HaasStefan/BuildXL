parameters:
- name: BxlCommonArgs # We reuse these across jobs like a constant
  type: string

- name: pool
  type: object
  default:
    name: BuildXL-DevOpsAgents-Selfhost
    image: linux-PME-GPT
    os: linux

- name: sdkVersion
  type: string
  default: '8.x'

jobs:
- template: job-build-selfhost-base.yml
  parameters:
    validationName: ExternalRelease
    cacheUniverse: bxlselfhostpublic
    internal: false
    publishTestResults: true
    pool: ${{ parameters.pool }}
    sdkVersion: ${{ parameters.sdkVersion }}
    
    outputs:
    - output: pipelineArtifact
      targetPath: $(Build.SourcesDirectory)/Out/Logs/Bootstrap
      artifactName: BuildXL-Logs.External.Bootstrap.$(System.JobAttempt)
      condition: always()
      continueOnError: true
      displayName: Upload bootstrap Logs

    buildXLArguments: >-
      --use-dev 
      ${{ parameters.BxlCommonArgs }}
      /q:ReleaseLinux
      "/f:tag='test'"

    preBuildSteps:
      # 1. Bootstrap external bits manually - note this is a pre-build step for the actual "build" (which is running tests) 
    - bash: >
        set -eu

        # Set a 60m timeout so we can catch hangs *and* get logs collected at the same time. Otherwise the whole job will timeout (check 'timeoutInMinutes' above).
        
        timeout --signal 9 60m bash bxl.sh 
        --use-adobuildrunner 
        --minimal
        --deploy-dev --release
        --runner-arg /cacheConfigLogGeneratedConfiguration:true 
        /logsDirectory:"Out/Logs/Bootstrap"
        /forceAddExecutionPermission-
        ${{ parameters.BxlCommonArgs }}
      displayName: Build
      env:
        AdoBuildRunnerInvocationKey: BuildExternal
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        workingDirectory: /home/subst
