trigger: none

pool:
  name: BuildXL-DevOpsAgents-PME

resources:
  repositories:
    - repository: DominoReleaseManagement
      type: git
      name: Domino.ReleaseManagement
    - repository: CloudBuild
      type: git
      name: CloudBuild

stages:
- stage:
  variables:
  - group: "BuildXL Secrets"
  jobs:
    - job: UpdateSBOMPackages
      displayName: "Update SBOM Packages"
      steps:
      - checkout: self
        persistCredentials: true
      - checkout: DominoReleaseManagement
      - checkout: CloudBuild
      - template: ../common/use-latest-dotnet-sdk.yml

      # Nuget authenticate is required for package restore to work even though the feed is under the same organization as the pipeline
      - task: NuGetAuthenticate@1
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '$(Build.SourcesDirectory)/Domino.ReleaseManagement/src/BuildXLReleaseManagement/BuildXLReleaseManagement/BuildXLReleaseManagement.csproj'
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: false
      - template: ../common/journaling.yml # Enable journaling
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: .\BuildXLReleaseManagement.exe updatePackages --Packages Microsoft.SBOMCore@latest@1essharedassets@Packaging@$(PAT-TseBuild-AzureDevOps-1EsSharedAssets) Microsoft.Parsers.ManifestGenerator@latest@1essharedassets@Packaging@$(PAT-TseBuild-AzureDevOps-1EsSharedAssets) Microsoft.Sbom.Parsers.Spdx22SbomParser@latest@nuget.org Microsoft.SBOM.Adapters@latest@nuget.org Microsoft.ManifestInterface@latest@1essharedassets@Packaging@$(PAT-TseBuild-AzureDevOps-1EsSharedAssets) Microsoft.Sbom.Contracts@latest@nuget.org Microsoft.ComponentDetection.Contracts@latest@nuget.org python@latest@nuget.org Microsoft.VisualStudio.Services.Governance.ComponentDetection@latest@mseng@ComponentGovernance@$(PAT-TseBuild-AzureDevOps-MsEng-Package-Read) Microsoft.Sbom.Extensions@latest@nuget.org --OneEsPat $(PAT-TseBuild-AzureDevOps-1EsSharedAssets) --CbPat $(PAT-TseBuild-AzureDevOps-CloudBuild) --MsEngGitPat $(PAT-TseBuild-AzureDevOps-MsEng) --ClientSecret $(AzureApp-BuildXL-Pipelines) --BuildXLSourceRoot "$(Build.SourcesDirectory)/BuildXL.Internal" --CloudbuildSourceRoot "$(Build.SourcesDirectory)/CloudBuild"
          showWarnings: true
          pwsh: false
          workingDirectory: '$(Build.ArtifactStagingDirectory)/BuildXLReleaseManagement'
      # Copy and publish BuildXL log in case it failed during the schedule phase
      - task: CopyFiles@2
        continueOnError: true
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/BuildXL.Internal/Out/Logs'
          Contents: '**/BuildXL.log'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/BuildXLLogs'
      - task: PublishPipelineArtifact@1
        continueOnError: true
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)/BuildXLLogs'
          artifact: '$(Build.BuildId).Logs'
          publishLocation: 'pipeline'
