# Creates an output package filter and sets a variable with that filter
parameters:
- name: internal
  type: boolean
  default: false
- name: packageList
  type: string
  default: 'packages'

steps:
- task: PowerShell@2
  displayName: 'Generate output package filter'
  inputs:
    targetType: 'inline'
    script: |
      # Read the content from the input file
      $content = Get-Content -Path $(Build.SourcesDirectory)\.azdo\packages\${{ parameters.packageList }}.txt -Raw

      # Parse content into list separated by newlines
      $packages = $content -split "`r?`n"

      $pathPrefix = "out/bin/release/"

      # Add "Microsoft." prefix for external packages.
      if ("${{ parameters.internal }}" -eq $false) {
        $packages = $packages | ForEach-Object { "Microsoft.$_" }
        $pathPrefix += "public"
      }

      $pathPrefix += "/pkgs/"

      # Append prefix to each package string
      $packages = $packages | ForEach-Object { "output='$pathPrefix$_.$(Build.BuildNumber).nupkg'" }

      # Append "or" prefix to each package string except the first one
      $packages = $( $packages[0]; $packages[1..($packages.Length - 1)] | ForEach-Object { "or$_" } )

      # Write the package filter string to a variable
      $packageStr = $packages -join ""

      Write-Host "Setting output filter string to 'PackagesFilter' variable."
      Write-Host "##vso[task.setvariable variable=PackagesFilter;]$packageStr"
      Write-Host "Set 'PackagesFilter' variable."

      exit 0
    showWarnings: true
    pwsh: true