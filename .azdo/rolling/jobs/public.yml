parameters: 
- name: PublicQualifiersToBuild
  type: object
  default:
    - Debug
    - Release

jobs:
- job: Public_Lkg
  displayName: 'Public Build: Create public nuget packages and upload to temporary drop'
  timeoutInMinutes: 180
  cancelTimeoutInMinutes: 1
  condition: and(succeeded(), ne(variables['ServicingOnlyBuild'], 'true'))
  pool:
    name: BuildXL-DevOpsAgents-PME
    os: windows

  templateContext:
    sdl:
      binskim:
        scanOutputDirectoryOnly: true
      spotBugs:
        enabled: false

    outputs:
    - output: pipelineArtifact
      displayName: '[OnFailure] Upload logs'
      condition: failed()
      continueOnError: True
      artifact: buildxl.rolling.public.logs.$(Build.BuildNumber)
      targetPath: $(Build.SourcesDirectory)\Out\Logs
      sbomEnabled: false    # SBOM is not needed for logs
  
    - output: pipelineArtifact
      displayName: Upload Public packages
      continueOnError: True
      artifact: buildxl-public.pkgs.$(Build.BuildNumber)
      targetPath: $(Build.SourcesDirectory)\Out\Bin\release\public\pkgs

  steps:
  - checkout: self
    fetchDepth: 1
    fetchTags: false

  - template: ../steps/public_prepare.yml

  - task: CmdLine@1
    displayName: Run bxl.cmd
    inputs:
      filename: bxl.cmd
      arguments: >- 
        /f:output='out/bin/release/public/pkgs/Microsoft.BuildXL.win-x64.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.win-x64-net7.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Cache.Hashing.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Cache.Interfaces.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Cache.Tools.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Cache.Libraries.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Utilities.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Utilities.Core.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Native.$(Build.BuildNumber).nupkg'oroutput='out/bin/release/public/pkgs/Microsoft.BuildXL.Processes.$(Build.BuildNumber).nupkg'
        /q:Release
        /p:[BuildXL.Branding]SemanticVersion=$(BuildXL.SemanticVersion)
        /p:[BuildXL.Branding]PrereleaseTag=$(BuildXL.PreReleaseTag)
        /p:[BuildXL.Branding]SourceIdentification=$(Branding_SourceIdentification)
        /logOutput:FullOutputOnWarningOrError
        /p:[Sdk.BuildXL]microsoftInternal=0
        /processRetries:3
        /enableGrpc+
        /traceInfo:selfhostlkgflavor=Public
        /nowarn:2841 /scrubDirectory:$(Build.SourcesDirectory)\Out\Objects
        /unsafe_GlobalUntrackedScopes:$(Agent.TempDirectory)\codeql3000
  
  # - task: msospo.ospo-extension.8d7f9abb-6896-461d-9e25-4f74ed65ddb2.notice@0
  #   displayName: NOTICE File Generator
  #   inputs:
  #     outputfile: Notice.txt
  
- job: Public_Build
  displayName: 'Public Build: Build and test qualifier:'
  timeoutInMinutes: 180
  condition: and(succeeded(), ne(variables['ServicingOnlyBuild'], 'true'))
  pool:
    name: BuildXL-DevOpsAgents-PME
    os: windows

  # TODO [maly]?: Do we want to switch to a distributed build instead of separating qualifiers? 
  strategy:
    matrix:
      ${{ each qualifier in parameters.PublicQualifiersToBuild }}:
        ${{ qualifier }}:
          QualifierToBuild: ${{ qualifier }}

  templateContext:
    outputs:
    - output: pipelineArtifact
      displayName: '[OnFailure] Upload LKG logs'
      condition: failed()
      artifact: buildxl.rolling.public-lkg.$(QualifierToBuild).logs.$(Build.BuildNumber)
      targetPath: $(Build.SourcesDirectory)\Out\Logs
      sbomEnabled: false    # SBOM is not needed for logs

  steps:
  - checkout: self
    fetchDepth: 1
    fetchTags: false

  - template: ../steps/public_prepare.yml

  - task: CmdLine@1
    displayName: bxl.cmd -deploy dev
    inputs:
      filename: bxl.cmd
      arguments: >- 
        -deploy dev
        -minimal
        -deployconfig $(QualifierToBuild)
        /server-
        /p:[BuildXL.Branding]SemanticVersion=$(BuildXL.SemanticVersion)
        /p:[BuildXL.Branding]PrereleaseTag=$(BuildXL.PreReleaseTag)
        /p:[BuildXL.Branding]SourceIdentification=$(Branding_SourceIdentification)
        /logOutput:FullOutputOnWarningOrError
        /p:[Sdk.BuildXL]microsoftInternal=0
        /processRetries:3
        /scrubDirectory:$(Build.SourcesDirectory)\Out\Objects
        /unsafe_GlobalUntrackedScopes:$(Agent.TempDirectory)\codeql3000
  
  - task: CmdLine@1
    displayName: bxl.cmd -use dev
    inputs:
      filename: bxl.cmd
      arguments: >-
        -use dev
        /p:[Sdk.BuildXL]microsoftInternal=0
        /q:$(QualifierToBuild)
        /p:[BuildXL.Branding]SemanticVersion=$(BuildXL.SemanticVersion)
        /p:[BuildXL.Branding]PrereleaseTag=$(BuildXL.PreReleaseTag)
        /p:[BuildXL.Branding]SourceIdentification=$(Branding_SourceIdentification)
        /server-
        /logOutput:FullOutputOnWarningOrError
        /p:RetryXunitTests=1
        /processRetries:3
        /p:xunitSemaphoreCount=16
        /scrubDirectory:$(Build.SourcesDirectory)\Out\Objects
        /unsafe_GlobalUntrackedScopes:$(Agent.TempDirectory)\codeql3000\d\log

  # Work item #2131658 - this file is not actually consumed anywhere
  # Disable the step for now.
  # - task: msospo.ospo-extension.8d7f9abb-6896-461d-9e25-4f74ed65ddb2.notice@0
  #   displayName: NOTICE File Generator
  #   retryCountOnTaskFailure: 3
  #   continueOnError: true